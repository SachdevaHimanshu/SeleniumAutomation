TestNG is a powerful testing framework, an enhanced version of JUnit. NG stands for 'Next Generation'.

#TestNG provides Powerful and wide variety of annotations to support your test cases.
Annotations are placed just above the methods. Annotations describes and defines how the methods will be executed.

#@Test The most important annotation in TestNG framework all the functionalities that needs to be tested are kept inside the @Test annotation method.

Other annotations are :
@BeforeMethod and @AfterMethod – These annotations run before and after each test method.
@BeforeClass and @AfterClass – These annotations run once before and after the first @test method in a class
@BeforeTest and @AfterTest – The BeforeTest annotation runs before the @BeforeClass annotation and the AfterTest annotation runs after the @AfterClass annotation
@BeforeSuite and @AfterSuite– These annotations run before and after all tests in a suite have run.
These annotations start the beginning of a test and the end of it, for all the classes in a suite.

TestNG contains a hierarchy among the annotations. This hierarchy is as follows (top being the highest priority):

@BeforeSuite
@BeforeTest
@BeforeClass
@BeforeMethod
@Test
@AfterMethod
@AfterClass
@AfterTest
@AfterSuite



Additonal Annotations:
1. @DataProvider and @Parameters: Refer 'Parameterizing in Selenium' sheet for details.




Few attributes associated with the TestNG annotation are:
1. Description: You can describe your test case under the description, stating what it does
@Test(description=”This test validates login functionality”)
2. Priority: You can prioritize the order of your test methods by defining a priority. Based on the defined priority, the test shall execute in that order.
@Test(priority=1)
3. DependsOnMethod: This attribute works miracles if one test case is dependent on the other test case. For example, to view your profile details, you need to login to the application. So, your profile test case is dependent on the login test case
@Test(dependsOnMethod=”Login”)
4. Enabled: Using this attribute, you can choose to execute or skip the execution of this test case. Setting it to true execute it and setting it to false will skip the test from the execution cycle
@Test(enabled=’true’)
5. Groups: Using this attribute, you can club your test cases into a single group and specify the specified group you wish to execute in your TestNG XML file. The test cases clubbed to that group will only be executed and the rest will be skipped
@Test(groups=”Smoke Suite”)
Note:
Can Be Parameterized – Annotations can also be parameterized, just like any other method in Java.


Some of the noteworthy features of TestNG are:
Helps to perform parallel testing, dependent method testing.
Flexibility of running your tests through multiple sets of data through TestNG.xml file or via data-provider concept.
Test cases can be grouped and prioritized as per need basis.
Provides access to HTML reports and can be customized through various plugins.
Test logs can be generated across tests.
