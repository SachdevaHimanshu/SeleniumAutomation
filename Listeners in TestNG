Listeners in TestNG
TestNG listeners are the piece of code that listens to the events occurring in the TestNG.
Events like Pass, Fail, Skip of testcases.
If the event matches the event for which we want the listener to listen, it executes the code.
Listeners are activated either before the test or after the test case. It is an interface that modifies the TestNG behavior.

ITestListener In TestNG
ITestListener is an Interface hence create a Class that will implements ITestListener and override all its methods.

	public void onStart(ITestContext context) {
   //This method invokes when the test class is instantiated and before executing any test method.
	}

	public void onFinish(ITestContext context) {
 //This method invokes when all the test methods have run, and calling of all of their configuration methods happens.
	}
  
	public void onTestStart(ITestResult result) {
  //This method invokes every time a test method is called and executed.
	}

	public void onTestSuccess(ITestResult result) {
//This method is invoked every time a test case passes (succeeds).
	}

	public void onTestFailure(ITestResult result) {
			//This method invokes every time a test case fails.
	}

	public void onTestSkipped(ITestResult result) {
//This method invokes every time a test skips.
	}

	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
//This method invokes when the test method fails as a whole but has passed a certain success percentage, which is defined by the user.
	}
NOte: ITestResult’ is an interface that describes the result of the test
Whereas ‘ ITestContext ‘ is a class that defines an instance ‘ context ‘, which contains all the information about the test run. 


How to implement ITestListener in TestsNG?

Listeners can implement in two ways in TestNG:

1. At the class level: Annotating listeners on each class in the test code.
@Listeners(TestNgSupportFeatures.Listeners.class)
public class SignInPageTest extends TestBase
{   
	
}
2. At the suite level: Define the class names to implement listeners in the TestNG XML file.
Implementing the listeners at the class level will cause a lot of distress; adding and managing the listeners. Therefore, in such a case of multiple classes, 
we adopt the way of implementing the listeners at the suite level in the TestNG XML file.
Implementing ITestListener At Suite Level

<suite name="ListenerExecution">
<listeners>
    <listener class-name = "ListenersTestNG"></listener>
    </listeners>
 
    <test name="ExecutingListeners">
        <classes>
            <class name="TestNG"></class>
        </classes>
    </test>
    
</suite>
